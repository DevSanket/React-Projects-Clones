[{"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\index.js":"1","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Feed\\Posts\\Posts.jsx":"2","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Feed\\feed.jsx":"3","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Header\\Header.js":"4","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\app\\store.js":"5","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Login\\Login.jsx":"6","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\features\\userSlice.js":"7","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\App.js":"8","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Header\\HeaderOptions.js":"9","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Sidebar\\Sidebar.jsx":"10","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\firebase.js":"11","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Widget\\Widget.jsx":"12","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Feed\\InputOptions.jsx":"13"},{"size":644,"mtime":1612361738947,"results":"14","hashOfConfig":"15"},{"size":1164,"mtime":1614010494202,"results":"16","hashOfConfig":"15"},{"size":2763,"mtime":1614010436377,"results":"17","hashOfConfig":"15"},{"size":1458,"mtime":1614005468362,"results":"18","hashOfConfig":"15"},{"size":186,"mtime":1613992861971,"results":"19","hashOfConfig":"15"},{"size":3209,"mtime":1614008972646,"results":"20","hashOfConfig":"15"},{"size":474,"mtime":1614009365825,"results":"21","hashOfConfig":"15"},{"size":1470,"mtime":1614014562117,"results":"22","hashOfConfig":"15"},{"size":641,"mtime":1614010616125,"results":"23","hashOfConfig":"15"},{"size":1640,"mtime":1614004832917,"results":"24","hashOfConfig":"15"},{"size":562,"mtime":1613114207133,"results":"25","hashOfConfig":"15"},{"size":949,"mtime":1614088969150,"results":"26","hashOfConfig":"15"},{"size":283,"mtime":1612674414627,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"dfh6y7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\index.js",[],["59","60"],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Feed\\Posts\\Posts.jsx",[],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Feed\\feed.jsx",["61","62"],"import { Input } from '@material-ui/core';\r\nimport { CalendarViewDay, Create, EventNote, Image, Subscriptions } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { db } from '../../firebase';\r\nimport './feed.css';\r\nimport InputOpitions from './InputOptions';\r\nimport Post from './Posts/Posts';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport FlipMove from \"react-flip-move\";\r\n\r\n\r\n\r\n\r\n\r\nconst Feed = () => {\r\n    const user = useSelector(selectUser);\r\n    const [input,setInput] = useState('');\r\n    const [posts,setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy('timestamp','desc').onSnapshot((snapshot) => \r\n        setPosts(\r\n                snapshot.docs.map((doc) => ({\r\n                    id:doc.id,\r\n                    data:doc.data()\r\n                }))\r\n            \r\n        ))\r\n        console.log(posts);\r\n    },[]);\r\n\r\n    \r\n\r\n    const sendPost = (e) => {\r\n        e.preventDefault();\r\n        db.collection('posts').add({\r\n            name : user.displayName,\r\n            description : user.email,\r\n            message: input,\r\n            photoUrl: user.photoUrl || \"\",\r\n            timestamp : firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n    }\r\n    \r\n    return ( \r\n    \r\n    <div className=\"feed\">\r\n            <div className=\"feed_inputContainer\">\r\n                <div className=\"feed_input\">\r\n                    <Create/>\r\n                    <form>\r\n                        <input type=\"text\" value={input} onChange={e => setInput(e.target.value)}/>\r\n                        <button onClick={sendPost } type=\"submit\" disabled={!input}>Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed_inputOptions\">\r\n                   <InputOpitions title=\"Photo\" Icon={Image} color=\"#70B5F9\" />\r\n                   <InputOpitions title=\"Video\" Icon={Subscriptions} color=\"#E7A33E\" />\r\n                   <InputOpitions title=\"Event\" Icon={EventNote} color=\"#C0CBCD\" />\r\n                   <InputOpitions title=\"Write Article\" Icon={CalendarViewDay} color=\"#7FC15E\" />\r\n                </div>\r\n            </div>\r\n            {/* Posts  */}\r\n            <FlipMove>\r\n            {\r\n                posts.map(({id,data: {name,description,message,photoUrl}}) => (\r\n                    <Post \r\n                    key={id}\r\n                    name={name}\r\n                    description={description}\r\n                    message={message}\r\n                    photoUrl={photoUrl} />\r\n                ))\r\n    \r\n            }\r\n            </FlipMove>\r\n            \r\n    </div> );\r\n}\r\n \r\nexport default Feed;","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Header\\Header.js",["63","64"],"import { BusinessCenter, Home, Message, Notifications, Search, SupervisorAccount } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout, selectUser } from '../../features/userSlice';\r\nimport { auth } from '../../firebase';\r\nimport './Header.css';\r\nimport HeaderOptions from './HeaderOptions';\r\n\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const logOutofApp = () => {\r\n        dispatch(logout());\r\n        auth.signOut();\r\n    }\r\n    return ( <div className=\"Header\">\r\n\r\n\r\n        <div className=\"header_left\">\r\n            <img src=\"https://image.flaticon.com/icons/png/512/174/174857.png\" alt=\"\"/>   \r\n            <div className=\"header_search\">\r\n                {/* SearchIcon  */}\r\n                <Search/>\r\n                <input placeholder=\"Search\" type=\"text\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"header_right\">\r\n                <HeaderOptions Icon={Home} title=\"home\"/>\r\n                <HeaderOptions Icon={SupervisorAccount} title=\"My Network\"/>\r\n                <HeaderOptions Icon={BusinessCenter} title=\"Jobs\"/>\r\n                <HeaderOptions Icon={Message} title=\"Messaging\"/>\r\n                <HeaderOptions Icon={Notifications} title=\"Notifications\"/>\r\n                <HeaderOptions avatar={true} title=\"You\" onClick={logOutofApp}/>\r\n                \r\n        </div>\r\n\r\n    </div> );\r\n}\r\n \r\nexport default Header;",["65","66"],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\app\\store.js",[],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Login\\Login.jsx",["67","68"],"import { Email } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../features/userSlice';\r\nimport { auth } from '../../firebase';\r\nimport './Login.css';\r\n\r\n\r\nfunction Login() {\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [name,setName] = useState(\"\");\r\n    const [profilePic,SetProfilePic] = useState(\"\");\r\n     const dispatch = useDispatch();\r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password)\r\n          .then(userAuth => {\r\n            dispatch(login({\r\n              email: userAuth.user.email,\r\n              uid: userAuth.user.uid,\r\n              displayName: userAuth.user.displayName,\r\n              profileUrl: userAuth.user.photoURL,\r\n            }))\r\n          })\r\n          .catch(error => alert(error));\r\n    }\r\n    const register = () => {\r\n            if(!name){\r\n                return alert(\"Please Enter Full Name\")\r\n            }\r\n\r\n            auth.createUserWithEmailAndPassword(email,password)\r\n            .then((userAuth) => {\r\n\r\n                userAuth.user.updateProfile({\r\n                    displayName: name,\r\n                    photoURL:profilePic\r\n                })\r\n                .then(() => {\r\n                    dispatch(login({\r\n                        email:userAuth.user.email,\r\n                        uid: userAuth.user.uid,\r\n                        displayName:name,\r\n                        photoURL:profilePic,\r\n                    }))\r\n                })\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"login\">\r\n                <img src=\"https://cdn.worldvectorlogo.com/logos/linkedin.svg\" alt=\"logo\"/>\r\n                <form >\r\n                    <input type=\"text\" \r\n                    value={name}\r\n                    onChange={(e) => \r\n                    setName(e.target.value)\r\n                    }\r\n                    placeholder=\"Full Name (required if registering)\"/>\r\n                    <input type=\"text\" \r\n                    value={profilePic}\r\n                    onChange={\r\n                        e => SetProfilePic(e.target.value)\r\n                    }\r\n                    placeholder=\"Profile Pic URL (optionl)\"/>\r\n                    <input type=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"/>\r\n                    <input\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    />\r\n                    <button type=\"submit\"\r\n                    onClick={loginToApp}\r\n                    > Sign In</button>\r\n                </form>\r\n                <p>Not a member? <span\r\n                className=\"login_register\"\r\n                onClick={register}\r\n                >Register Now</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\features\\userSlice.js",[],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\App.js",[],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Header\\HeaderOptions.js",[],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Sidebar\\Sidebar.jsx",[],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\firebase.js",[],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Widget\\Widget.jsx",[],"D:\\Code Project\\React-Projects-Clones\\linkedin-clone\\src\\Componants\\Feed\\InputOptions.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":32,"column":7,"nodeType":"79","endLine":32,"endColumn":9,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"81","line":3,"column":23,"nodeType":"75","messageId":"76","endLine":3,"endColumn":34},{"ruleId":"73","severity":1,"message":"82","line":4,"column":18,"nodeType":"75","messageId":"76","endLine":4,"endColumn":28},{"ruleId":"69","replacedBy":"83"},{"ruleId":"71","replacedBy":"84"},{"ruleId":"73","severity":1,"message":"85","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":15},{"ruleId":"73","severity":1,"message":"86","line":2,"column":17,"nodeType":"75","messageId":"76","endLine":2,"endColumn":26},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'useSelector' is defined but never used.","'selectUser' is defined but never used.",["87"],["88"],"'Email' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [posts]",{"range":"92","text":"93"},[999,1001],"[posts]"]